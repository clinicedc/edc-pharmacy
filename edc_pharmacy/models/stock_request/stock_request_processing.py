from django.db import models
from edc_constants.constants import CLOSED, OPEN
from edc_model.models import BaseUuidModel, HistoricalRecords
from edc_sites.model_mixins import SiteModelMixin
from edc_utils import get_utcnow
from sequences import get_next_value

from ..stock import Container, Location
from .stock_request import StockRequest


class Manager(models.Manager):
    use_in_migrations = True


class StockRequestProcessing(SiteModelMixin, BaseUuidModel):

    request_process_identifier = models.CharField(
        max_length=36,
        unique=True,
        null=True,
        blank=True,
        help_text="Auto-generated by the EDC.",
    )

    request_process_datetime = models.DateTimeField(default=get_utcnow)

    stock_request = models.ForeignKey(
        StockRequest, verbose_name="Request", on_delete=models.PROTECT
    )

    container = models.ForeignKey(Container, on_delete=models.PROTECT, null=True, blank=False)

    # containers_per_subject = models.PositiveSmallIntegerField(
    #     verbose_name="Number of containers per subject", default=1
    # )

    location = models.ForeignKey(
        Location, verbose_name="Requested from", on_delete=models.PROTECT
    )

    status = models.CharField(
        max_length=25,
        choices=((OPEN, OPEN.title()), (CLOSED, CLOSED.title())),
        default=OPEN,
    )

    objects = Manager()

    history = HistoricalRecords()

    def __str__(self):
        return self.request_process_identifier

    def save(self, *args, **kwargs):
        if not self.request_process_identifier:
            next_id = get_next_value(self._meta.label_lower)
            self.request_process_identifier = f"{next_id:06d}"
        super().save(*args, **kwargs)

    class Meta(SiteModelMixin.Meta, BaseUuidModel.Meta):
        verbose_name = "Stock Request processing"
        verbose_name_plural = "Stock Request processing"
