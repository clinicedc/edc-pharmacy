# Generated by Django 5.1.2 on 2024-11-02 22:50

import _socket
import django.db.models.deletion
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_revision.revision_field
import edc_pharmacy.models.stock.request
import edc_pharmacy.models.stock.request_item
import edc_sites.managers
import edc_utils.date
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("edc_pharmacy", "0030_rename_container_qty_container_qty_and_more"),
        ("sites", "0002_alter_domain_unique"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RenameField(
            model_name="assignment",
            old_name="assignment",
            new_name="name",
        ),
        migrations.RenameField(
            model_name="historicalassignment",
            old_name="assignment",
            new_name="name",
        ),
        migrations.AddField(
            model_name="container",
            name="may_order_as",
            field=models.BooleanField(
                default=False, verbose_name="Container may be used for ordering"
            ),
        ),
        migrations.AddField(
            model_name="container",
            name="may_request_as",
            field=models.BooleanField(
                default=False, verbose_name="Container may be used for stock request"
            ),
        ),
        migrations.AddField(
            model_name="historicalstock",
            name="status",
            field=models.CharField(
                choices=[("available", "Available"), ("reserved", "Reserved")],
                default="available",
                max_length=25,
            ),
        ),
        migrations.AddField(
            model_name="stock",
            name="status",
            field=models.CharField(
                choices=[("available", "Available"), ("reserved", "Reserved")],
                default="available",
                max_length=25,
            ),
        ),
        migrations.AlterField(
            model_name="container",
            name="may_receive_as",
            field=models.BooleanField(
                default=False, verbose_name="Container may be used for receiving"
            ),
        ),
        migrations.AlterField(
            model_name="historicalorderitem",
            name="container",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                limit_choices_to={"may_order_as": True},
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.container",
            ),
        ),
        migrations.AlterField(
            model_name="historicalreceiveitem",
            name="container",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                limit_choices_to={"may_receive_as": True},
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.container",
            ),
        ),
        migrations.AlterField(
            model_name="orderitem",
            name="container",
            field=models.ForeignKey(
                limit_choices_to={"may_order_as": True},
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.container",
            ),
        ),
        migrations.AlterField(
            model_name="receiveitem",
            name="container",
            field=models.ForeignKey(
                limit_choices_to={"may_receive_as": True},
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.container",
            ),
        ),
        migrations.CreateModel(
            name="HistoricalRequest",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                    ),
                ),
                (
                    "request_identifier",
                    models.CharField(blank=True, db_index=True, max_length=36, null=True),
                ),
                ("request_datetime", models.DateTimeField(default=edc_utils.date.get_utcnow)),
                ("name", models.CharField(db_index=True, max_length=50)),
                (
                    "default_qty",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Default number of containers per item"
                    ),
                ),
                (
                    "item_count",
                    models.IntegerField(
                        default=0,
                        help_text="Matches the number of StockRequestItems",
                        verbose_name="Actual containers in this request",
                    ),
                ),
                (
                    "labels",
                    models.TextField(
                        blank=True,
                        help_text="A cell to capture and confirm printed/scanned labels related to this Stock request. See StockRequestItem.",
                        null=True,
                        verbose_name="Labels",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("open", "Open"), ("closed", "Closed")],
                        default="open",
                        max_length=25,
                    ),
                ),
                (
                    "history_id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "container",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="edc_pharmacy.container",
                    ),
                ),
                (
                    "formulation",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="edc_pharmacy.formulation",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="edc_pharmacy.location",
                        verbose_name="Requested from",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="sites.site",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Stock: Request",
                "verbose_name_plural": "historical Stock: Request",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Request",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "request_identifier",
                    models.CharField(blank=True, max_length=36, null=True, unique=True),
                ),
                ("request_datetime", models.DateTimeField(default=edc_utils.date.get_utcnow)),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "default_qty",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Default number of containers per item"
                    ),
                ),
                (
                    "item_count",
                    models.IntegerField(
                        default=0,
                        help_text="Matches the number of StockRequestItems",
                        verbose_name="Actual containers in this request",
                    ),
                ),
                (
                    "labels",
                    models.TextField(
                        blank=True,
                        help_text="A cell to capture and confirm printed/scanned labels related to this Stock request. See StockRequestItem.",
                        null=True,
                        verbose_name="Labels",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("open", "Open"), ("closed", "Closed")],
                        default="open",
                        max_length=25,
                    ),
                ),
                (
                    "container",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="edc_pharmacy.container",
                    ),
                ),
                (
                    "formulation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="edc_pharmacy.formulation",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="edc_pharmacy.location",
                        verbose_name="Requested from",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="sites.site",
                    ),
                ),
            ],
            options={
                "verbose_name": "Stock: Request",
                "verbose_name_plural": "Stock: Request",
                "abstract": False,
                "default_permissions": ("add", "change", "delete", "view", "export", "import"),
                "default_manager_name": "objects",
            },
            managers=[
                ("objects", edc_pharmacy.models.stock.request.Manager()),
                ("on_site", edc_sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalRequestItem",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                    ),
                ),
                (
                    "request_item_identifier",
                    models.CharField(blank=True, db_index=True, max_length=36, null=True),
                ),
                (
                    "request_item_datetime",
                    models.DateTimeField(default=edc_utils.date.get_utcnow),
                ),
                ("subject_identifier", models.CharField(max_length=15, null=True)),
                (
                    "reference",
                    models.CharField(
                        db_index=True,
                        help_text="Container human readable reference",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "sid",
                    models.IntegerField(
                        help_text="Pharmacy reference for rando assignment. Validated against the Stock FK",
                        null=True,
                    ),
                ),
                (
                    "gender",
                    models.CharField(help_text="Add for convenience", max_length=5, null=True),
                ),
                ("printed_datetime", models.DateTimeField(null=True)),
                ("printed", models.BooleanField(default=False)),
                ("scanned_datetime", models.DateTimeField(null=True)),
                ("scanned", models.BooleanField(default=False)),
                ("received_datetime", models.DateTimeField(null=True)),
                ("received", models.BooleanField(default=False, help_text="Received at site")),
                ("dispensed_datetime", models.DateTimeField(null=True)),
                (
                    "dispensed",
                    models.BooleanField(default=False, help_text="Dispensed to clinic"),
                ),
                ("crf_datetime", models.DateTimeField(null=True)),
                (
                    "crf",
                    models.BooleanField(default=False, help_text="Entered into subject's CRF"),
                ),
                (
                    "history_id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="sites.site",
                    ),
                ),
                (
                    "request",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="edc_pharmacy.request",
                        verbose_name="Stock request",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Stock: Request item",
                "verbose_name_plural": "historical Stock: Request items",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="RequestItem",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "request_item_identifier",
                    models.CharField(blank=True, max_length=36, null=True, unique=True),
                ),
                (
                    "request_item_datetime",
                    models.DateTimeField(default=edc_utils.date.get_utcnow),
                ),
                ("subject_identifier", models.CharField(max_length=15, null=True)),
                (
                    "reference",
                    models.CharField(
                        help_text="Container human readable reference",
                        max_length=10,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "sid",
                    models.IntegerField(
                        help_text="Pharmacy reference for rando assignment. Validated against the Stock FK",
                        null=True,
                    ),
                ),
                (
                    "gender",
                    models.CharField(help_text="Add for convenience", max_length=5, null=True),
                ),
                ("printed_datetime", models.DateTimeField(null=True)),
                ("printed", models.BooleanField(default=False)),
                ("scanned_datetime", models.DateTimeField(null=True)),
                ("scanned", models.BooleanField(default=False)),
                ("received_datetime", models.DateTimeField(null=True)),
                ("received", models.BooleanField(default=False, help_text="Received at site")),
                ("dispensed_datetime", models.DateTimeField(null=True)),
                (
                    "dispensed",
                    models.BooleanField(default=False, help_text="Dispensed to clinic"),
                ),
                ("crf_datetime", models.DateTimeField(null=True)),
                (
                    "crf",
                    models.BooleanField(default=False, help_text="Entered into subject's CRF"),
                ),
                (
                    "request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="edc_pharmacy.request",
                        verbose_name="Stock request",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.PROTECT, to="sites.site"
                    ),
                ),
            ],
            options={
                "verbose_name": "Stock: Request item",
                "verbose_name_plural": "Stock: Request items",
                "abstract": False,
                "default_permissions": ("add", "change", "delete", "view", "export", "import"),
                "default_manager_name": "objects",
            },
            managers=[
                ("objects", edc_pharmacy.models.stock.request_item.Manager()),
            ],
        ),
        migrations.AddField(
            model_name="historicalstock",
            name="request_item",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.requestitem",
            ),
        ),
        migrations.AddField(
            model_name="stock",
            name="request_item",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.requestitem",
            ),
        ),
        migrations.AddIndex(
            model_name="request",
            index=models.Index(
                fields=["modified", "created"], name="edc_pharmac_modifie_e229c0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="request",
            index=models.Index(
                fields=["user_modified", "user_created"], name="edc_pharmac_user_mo_5f3bd7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="requestitem",
            index=models.Index(
                fields=["modified", "created"], name="edc_pharmac_modifie_20ac62_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="requestitem",
            index=models.Index(
                fields=["user_modified", "user_created"], name="edc_pharmac_user_mo_cb9812_idx"
            ),
        ),
    ]
