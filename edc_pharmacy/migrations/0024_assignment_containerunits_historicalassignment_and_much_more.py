# Generated by Django 5.1.2 on 2024-11-04 01:28

import uuid
from decimal import Decimal

import _socket
import django.contrib.sites.models
import django.db.models.deletion
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_crypto_fields.fields.encrypted_char_field
import django_revision.revision_field
import edc_sites.managers
import edc_utils.date
import simple_history.models
from django.conf import settings
from django.db import migrations, models

import edc_pharmacy.models.medication.assignment
import edc_pharmacy.models.medication.lot
import edc_pharmacy.models.medication.medication
import edc_pharmacy.models.stock.order
import edc_pharmacy.models.stock.order_item
import edc_pharmacy.models.stock.receive
import edc_pharmacy.models.stock.receive_item
import edc_pharmacy.models.stock.request
import edc_pharmacy.models.stock.request_item
import edc_pharmacy.models.stock.stock


class Migration(migrations.Migration):

    dependencies = [
        ("edc_pharmacy", "0023_remove_rx_edc_pharmac_modifie_986021_idx_and_more"),
        ("sites", "0002_alter_domain_unique"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Assignment",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    django_crypto_fields.fields.encrypted_char_field.EncryptedCharField(
                        blank=True,
                        help_text="word as in randomization list (Encryption: RSA local)",
                        max_length=71,
                    ),
                ),
                (
                    "display_label",
                    django_crypto_fields.fields.encrypted_char_field.EncryptedCharField(
                        blank=True,
                        help_text="If not provided, defaults to 'assignment' (Encryption: RSA local)",
                        max_length=71,
                        null=True,
                        verbose_name="Formal label",
                    ),
                ),
            ],
            options={
                "verbose_name": "Medication: Assignment",
                "verbose_name_plural": "Medication: Assignments",
                "abstract": False,
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "default_manager_name": "objects",
            },
            managers=[
                ("objects", edc_pharmacy.models.medication.assignment.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ContainerUnits",
            fields=[
                (
                    "name",
                    models.CharField(
                        help_text="This is the stored value, required",
                        max_length=250,
                        unique=True,
                        verbose_name="Stored value",
                    ),
                ),
                (
                    "plural_name",
                    models.CharField(max_length=250, null=True, verbose_name="Plural name"),
                ),
                (
                    "display_index",
                    models.IntegerField(
                        default=0,
                        help_text="Index to control display order if not alphabetical, not required",
                        verbose_name="display index",
                    ),
                ),
                (
                    "field_name",
                    models.CharField(
                        blank=True,
                        editable=False,
                        help_text="Not required",
                        max_length=25,
                        null=True,
                    ),
                ),
                ("extra_value", models.CharField(max_length=250, null=True)),
                (
                    "version",
                    models.CharField(default="1.0", editable=False, max_length=35),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "display_name",
                    models.CharField(
                        blank=True,
                        help_text="(suggest 40 characters max.)",
                        max_length=250,
                        null=True,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
            ],
            options={
                "verbose_name": "Stock: Container units",
                "verbose_name_plural": "Stock: Container units",
                "abstract": False,
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
            },
        ),
        migrations.CreateModel(
            name="HistoricalAssignment",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                    ),
                ),
                (
                    "name",
                    django_crypto_fields.fields.encrypted_char_field.EncryptedCharField(
                        blank=True,
                        help_text="word as in randomization list (Encryption: RSA local)",
                        max_length=71,
                    ),
                ),
                (
                    "display_label",
                    django_crypto_fields.fields.encrypted_char_field.EncryptedCharField(
                        blank=True,
                        help_text="If not provided, defaults to 'assignment' (Encryption: RSA local)",
                        max_length=71,
                        null=True,
                        verbose_name="Formal label",
                    ),
                ),
                (
                    "history_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Medication: Assignment",
                "verbose_name_plural": "historical Medication: Assignments",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalLot",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                    ),
                ),
                ("lot_no", models.CharField(db_index=True, max_length=50)),
                ("expiration_date", models.DateField()),
                (
                    "history_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Medication: Lot",
                "verbose_name_plural": "historical Medication: Lots",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalOrderItem",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                    ),
                ),
                (
                    "order_item_identifier",
                    models.CharField(blank=True, db_index=True, max_length=36, null=True),
                ),
                (
                    "qty",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "unit_qty",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "unit_qty_received",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("New", "New"),
                            ("partial", "Partial"),
                            ("COMPLETE", "Complete"),
                        ],
                        default="New",
                        help_text="Updates in the signal",
                        max_length=25,
                    ),
                ),
                (
                    "history_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Stock: Order item",
                "verbose_name_plural": "historical Stock: Order items",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalReceive",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                    ),
                ),
                (
                    "receive_identifier",
                    models.CharField(blank=True, db_index=True, max_length=36, null=True),
                ),
                (
                    "receive_datetime",
                    models.DateTimeField(default=edc_utils.date.get_utcnow),
                ),
                (
                    "item_count",
                    models.IntegerField(null=True, verbose_name="Item count"),
                ),
                (
                    "history_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Stock: Receive",
                "verbose_name_plural": "historical Stock: Receive",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalReceiveItem",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                    ),
                ),
                (
                    "receive_item_identifier",
                    models.CharField(blank=True, db_index=True, max_length=36, null=True),
                ),
                (
                    "receive_item_datetime",
                    models.DateTimeField(default=edc_utils.date.get_utcnow),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Leave blank to use default",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "qty",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "unit_qty",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Quantity x Container.Quantity, e.g. 10 x Bottle of 128 = 1280",
                        max_digits=20,
                        null=True,
                        verbose_name="Unit quantity",
                    ),
                ),
                ("added_to_stock", models.BooleanField(default=False)),
                (
                    "history_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Stock: Receive item",
                "verbose_name_plural": "historical Stock: Receive items",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalRequest",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                    ),
                ),
                (
                    "request_identifier",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Auto-generated by the EDC.",
                        max_length=36,
                        null=True,
                    ),
                ),
                (
                    "request_datetime",
                    models.DateTimeField(default=edc_utils.date.get_utcnow),
                ),
                ("name", models.CharField(db_index=True, max_length=50)),
                (
                    "containers_per_subject",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Number of containers per subject"
                    ),
                ),
                (
                    "item_count",
                    models.IntegerField(
                        default=0,
                        help_text="Matches the number of StockRequestItems. Updated by the EDC",
                        verbose_name="Actual containers in this request",
                    ),
                ),
                (
                    "labels",
                    models.TextField(
                        blank=True,
                        help_text="A cell to capture and confirm printed/scanned labels related to this Stock request. See StockRequestItem.",
                        null=True,
                        verbose_name="Labels",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("open", "Open"), ("closed", "Closed")],
                        default="open",
                        max_length=25,
                    ),
                ),
                (
                    "history_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Stock: Request",
                "verbose_name_plural": "historical Stock: Request",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalRequestItem",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                    ),
                ),
                (
                    "request_item_identifier",
                    models.CharField(blank=True, db_index=True, max_length=36, null=True),
                ),
                (
                    "code",
                    models.CharField(
                        db_index=True, help_text="Human readable code", max_length=15
                    ),
                ),
                (
                    "request_item_datetime",
                    models.DateTimeField(default=edc_utils.date.get_utcnow),
                ),
                ("subject_identifier", models.CharField(max_length=15, null=True)),
                (
                    "sid",
                    models.IntegerField(
                        help_text="Pharmacy reference for rando assignment. Validated against the Stock FK",
                        null=True,
                    ),
                ),
                (
                    "gender",
                    models.CharField(help_text="Add for convenience", max_length=5, null=True),
                ),
                ("printed_datetime", models.DateTimeField(null=True)),
                ("printed", models.BooleanField(default=False)),
                ("scanned_datetime", models.DateTimeField(null=True)),
                ("scanned", models.BooleanField(default=False)),
                ("received_datetime", models.DateTimeField(null=True)),
                (
                    "received",
                    models.BooleanField(default=False, help_text="Received at site"),
                ),
                ("dispensed_datetime", models.DateTimeField(null=True)),
                (
                    "dispensed",
                    models.BooleanField(default=False, help_text="Dispensed to clinic"),
                ),
                ("crf_datetime", models.DateTimeField(null=True)),
                (
                    "crf",
                    models.BooleanField(default=False, help_text="Entered into subject's CRF"),
                ),
                (
                    "history_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Stock: Request item",
                "verbose_name_plural": "historical Stock: Request items",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalStockTransfer",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                    ),
                ),
                (
                    "stock_transfer_identifier",
                    models.CharField(
                        max_length=15,
                        null=True,
                        verbose_name="Stock transfer identifier",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("open", "Open"), ("closed", "Closed")],
                        default="open",
                        max_length=15,
                    ),
                ),
                (
                    "history_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical IMP stock transfer",
                "verbose_name_plural": "historical IMP  stock transfers",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Lot",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("lot_no", models.CharField(max_length=50, unique=True)),
                ("expiration_date", models.DateField()),
            ],
            options={
                "verbose_name": "Medication: Lot",
                "verbose_name_plural": "Medication: Lots",
                "abstract": False,
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "default_manager_name": "objects",
            },
            managers=[
                ("objects", edc_pharmacy.models.medication.lot.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "order_item_identifier",
                    models.CharField(blank=True, max_length=36, null=True, unique=True),
                ),
                (
                    "qty",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "unit_qty",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "unit_qty_received",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("New", "New"),
                            ("partial", "Partial"),
                            ("COMPLETE", "Complete"),
                        ],
                        default="New",
                        help_text="Updates in the signal",
                        max_length=25,
                    ),
                ),
            ],
            options={
                "verbose_name": "Stock: Order item",
                "verbose_name_plural": "Stock: Order items",
                "abstract": False,
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "default_manager_name": "objects",
            },
            managers=[
                ("objects", edc_pharmacy.models.stock.order_item.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Receive",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "receive_identifier",
                    models.CharField(blank=True, max_length=36, null=True, unique=True),
                ),
                (
                    "receive_datetime",
                    models.DateTimeField(default=edc_utils.date.get_utcnow),
                ),
                (
                    "item_count",
                    models.IntegerField(null=True, verbose_name="Item count"),
                ),
            ],
            options={
                "verbose_name": "Stock: Receive",
                "verbose_name_plural": "Stock: Receive",
                "abstract": False,
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "default_manager_name": "objects",
            },
            managers=[
                ("objects", edc_pharmacy.models.stock.receive.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ReceiveItem",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "receive_item_identifier",
                    models.CharField(blank=True, max_length=36, null=True, unique=True),
                ),
                (
                    "receive_item_datetime",
                    models.DateTimeField(default=edc_utils.date.get_utcnow),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Leave blank to use default",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "qty",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "unit_qty",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Quantity x Container.Quantity, e.g. 10 x Bottle of 128 = 1280",
                        max_digits=20,
                        null=True,
                        verbose_name="Unit quantity",
                    ),
                ),
                ("added_to_stock", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Stock: Receive item",
                "verbose_name_plural": "Stock: Receive items",
                "abstract": False,
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "default_manager_name": "objects",
            },
            managers=[
                ("objects", edc_pharmacy.models.stock.receive_item.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Request",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "request_identifier",
                    models.CharField(
                        blank=True,
                        help_text="Auto-generated by the EDC.",
                        max_length=36,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "request_datetime",
                    models.DateTimeField(default=edc_utils.date.get_utcnow),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "containers_per_subject",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Number of containers per subject"
                    ),
                ),
                (
                    "item_count",
                    models.IntegerField(
                        default=0,
                        help_text="Matches the number of StockRequestItems. Updated by the EDC",
                        verbose_name="Actual containers in this request",
                    ),
                ),
                (
                    "labels",
                    models.TextField(
                        blank=True,
                        help_text="A cell to capture and confirm printed/scanned labels related to this Stock request. See StockRequestItem.",
                        null=True,
                        verbose_name="Labels",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("open", "Open"), ("closed", "Closed")],
                        default="open",
                        max_length=25,
                    ),
                ),
            ],
            options={
                "verbose_name": "Stock: Request",
                "verbose_name_plural": "Stock: Request",
                "abstract": False,
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "default_manager_name": "objects",
            },
            managers=[
                ("objects", edc_pharmacy.models.stock.request.Manager()),
                ("on_site", edc_sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name="RequestItem",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "request_item_identifier",
                    models.CharField(blank=True, max_length=36, null=True, unique=True),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Human readable code", max_length=15, unique=True
                    ),
                ),
                (
                    "request_item_datetime",
                    models.DateTimeField(default=edc_utils.date.get_utcnow),
                ),
                ("subject_identifier", models.CharField(max_length=15, null=True)),
                (
                    "sid",
                    models.IntegerField(
                        help_text="Pharmacy reference for rando assignment. Validated against the Stock FK",
                        null=True,
                    ),
                ),
                (
                    "gender",
                    models.CharField(help_text="Add for convenience", max_length=5, null=True),
                ),
                ("printed_datetime", models.DateTimeField(null=True)),
                ("printed", models.BooleanField(default=False)),
                ("scanned_datetime", models.DateTimeField(null=True)),
                ("scanned", models.BooleanField(default=False)),
                ("received_datetime", models.DateTimeField(null=True)),
                (
                    "received",
                    models.BooleanField(default=False, help_text="Received at site"),
                ),
                ("dispensed_datetime", models.DateTimeField(null=True)),
                (
                    "dispensed",
                    models.BooleanField(default=False, help_text="Dispensed to clinic"),
                ),
                ("crf_datetime", models.DateTimeField(null=True)),
                (
                    "crf",
                    models.BooleanField(default=False, help_text="Entered into subject's CRF"),
                ),
            ],
            options={
                "verbose_name": "Stock: Request item",
                "verbose_name_plural": "Stock: Request items",
                "abstract": False,
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "default_manager_name": "objects",
            },
            managers=[
                ("objects", edc_pharmacy.models.stock.request_item.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="StockTransfer",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "stock_transfer_identifier",
                    models.CharField(
                        max_length=15,
                        null=True,
                        verbose_name="Stock transfer identifier",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("open", "Open"), ("closed", "Closed")],
                        default="open",
                        max_length=15,
                    ),
                ),
            ],
            options={
                "verbose_name": "IMP stock transfer",
                "verbose_name_plural": "IMP  stock transfers",
            },
            managers=[
                ("on_site", edc_sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name="StockTransferItems",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("subject_identifier", models.CharField(max_length=50)),
            ],
            options={
                "verbose_name": "Stock Transfer: Items",
                "verbose_name_plural": "Stock Transfer: Items",
            },
        ),
        migrations.CreateModel(
            name="StockTransferRequest",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("request_identifier", models.CharField(max_length=50, unique=True)),
                ("request_date", models.DateField()),
                (
                    "qty",
                    models.IntegerField(blank=True, help_text="Autofilled", null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "open"),
                            ("ON_ORDER", "ON_ORDER"),
                            ("FULFILLED", "FULFILLED"),
                            ("cancelled", "cancelled"),
                        ],
                        default="open",
                        max_length=25,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "default_manager_name": "objects",
            },
        ),
        migrations.CreateModel(
            name="StockTransferRequestItems",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(blank=True, max_length=10, verbose_name="Device created"),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Device modified"
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        null=True,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("subject_identifier", models.CharField(max_length=50)),
            ],
            options={
                "verbose_name": "Stock Transfer Request: Items",
                "verbose_name_plural": "Stock Transfer Request: Items",
            },
        ),
        migrations.RemoveField(
            model_name="genericcontainer",
            name="box",
        ),
        migrations.RemoveField(
            model_name="genericcontainer",
            name="container_type",
        ),
        migrations.RemoveField(
            model_name="historicallabels",
            name="history_user",
        ),
        migrations.RemoveField(
            model_name="historicallabels",
            name="stock_create_labels",
        ),
        migrations.RemoveField(
            model_name="historicalmedicationlot",
            name="formulation",
        ),
        migrations.RemoveField(
            model_name="historicalmedicationlot",
            name="history_user",
        ),
        migrations.RemoveField(
            model_name="historicalstockcreatelabels",
            name="history_user",
        ),
        migrations.RemoveField(
            model_name="historicalstockcreatelabels",
            name="product",
        ),
        migrations.RemoveField(
            model_name="historicalstockreceiving",
            name="history_user",
        ),
        migrations.RemoveField(
            model_name="historicalstockreceiving",
            name="product",
        ),
        migrations.RemoveField(
            model_name="labels",
            name="stock_create_labels",
        ),
        migrations.RemoveField(
            model_name="medicationlot",
            name="formulation",
        ),
        migrations.RemoveField(
            model_name="subjectpillbottle",
            name="medication_lot",
        ),
        migrations.RemoveField(
            model_name="historicalproduct",
            name="medication_lot",
        ),
        migrations.RemoveField(
            model_name="pillbottle",
            name="medication_lot",
        ),
        migrations.RemoveField(
            model_name="product",
            name="medication_lot",
        ),
        migrations.RemoveField(
            model_name="pillbottle",
            name="box",
        ),
        migrations.RemoveField(
            model_name="pillbottle",
            name="container_type",
        ),
        migrations.RemoveField(
            model_name="pillbottle",
            name="formulation",
        ),
        migrations.RemoveField(
            model_name="pillbottle",
            name="source_container",
        ),
        migrations.RemoveField(
            model_name="subjectpillbottle",
            name="source_container",
        ),
        migrations.RemoveField(
            model_name="stockcreatelabels",
            name="product",
        ),
        migrations.RemoveField(
            model_name="stockreceiving",
            name="product",
        ),
        migrations.RemoveField(
            model_name="subjectpillbottle",
            name="box",
        ),
        migrations.RemoveField(
            model_name="subjectpillbottle",
            name="container_type",
        ),
        migrations.RemoveField(
            model_name="subjectpillbottle",
            name="formulation",
        ),
        migrations.CreateModel(
            name="SiteProxy",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("sites.site",),
            managers=[
                ("objects", django.contrib.sites.models.SiteManager()),
            ],
        ),
        migrations.AlterModelOptions(
            name="container",
            options={
                "default_manager_name": "objects",
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "verbose_name": "Stock: Container",
                "verbose_name_plural": "Stock: Containers",
            },
        ),
        migrations.AlterModelOptions(
            name="containertype",
            options={
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "verbose_name": "Stock: Container type",
                "verbose_name_plural": "Stock: Container types",
            },
        ),
        migrations.AlterModelOptions(
            name="dosageguideline",
            options={
                "default_manager_name": "objects",
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "verbose_name": "Medication: Dosage Guideline",
                "verbose_name_plural": "Medication: Dosage Guidelines",
            },
        ),
        migrations.AlterModelOptions(
            name="formulation",
            options={
                "default_manager_name": "objects",
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "verbose_name": "Medication: Formulation",
                "verbose_name_plural": "Medication: Formulations",
            },
        ),
        migrations.AlterModelOptions(
            name="formulationtype",
            options={
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "verbose_name": "Formulation yype",
                "verbose_name_plural": "Formulation types",
            },
        ),
        migrations.AlterModelOptions(
            name="historicaldosageguideline",
            options={
                "get_latest_by": ("history_date", "history_id"),
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Medication: Dosage Guideline",
                "verbose_name_plural": "historical Medication: Dosage Guidelines",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalformulation",
            options={
                "get_latest_by": ("history_date", "history_id"),
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Medication: Formulation",
                "verbose_name_plural": "historical Medication: Formulations",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalorder",
            options={
                "get_latest_by": ("history_date", "history_id"),
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Stock: Order",
                "verbose_name_plural": "historical Stock: Orders",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalproduct",
            options={
                "get_latest_by": ("history_date", "history_id"),
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Stock: Product",
                "verbose_name_plural": "historical Stock: Product",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalrxrefill",
            options={
                "get_latest_by": ("history_date", "history_id"),
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Prescription: Refill",
                "verbose_name_plural": "historical Prescription: Refills",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalstock",
            options={
                "get_latest_by": ("history_date", "history_id"),
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Stock",
                "verbose_name_plural": "historical Stock",
            },
        ),
        migrations.AlterModelOptions(
            name="location",
            options={
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "verbose_name": "Location",
                "verbose_name_plural": "Locations",
            },
        ),
        migrations.AlterModelOptions(
            name="order",
            options={
                "default_manager_name": "objects",
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "verbose_name": "Stock: Order",
                "verbose_name_plural": "Stock: Orders",
            },
        ),
        migrations.AlterModelOptions(
            name="product",
            options={
                "default_manager_name": "objects",
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "verbose_name": "Stock: Product",
                "verbose_name_plural": "Stock: Product",
            },
        ),
        migrations.AlterModelOptions(
            name="rxrefill",
            options={
                "default_manager_name": "objects",
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "verbose_name": "Prescription: Refill",
                "verbose_name_plural": "Prescription: Refills",
            },
        ),
        migrations.AlterModelOptions(
            name="stock",
            options={
                "default_manager_name": "objects",
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "verbose_name": "Stock",
                "verbose_name_plural": "Stock",
            },
        ),
        migrations.AlterModelManagers(
            name="medication",
            managers=[
                ("objects", edc_pharmacy.models.medication.medication.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="order",
            managers=[
                ("objects", edc_pharmacy.models.stock.order.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="product",
            managers=[],
        ),
        migrations.AlterModelManagers(
            name="stock",
            managers=[
                ("objects", edc_pharmacy.models.stock.stock.Manager()),
            ],
        ),
        migrations.RemoveIndex(
            model_name="container",
            name="edc_pharmac_display_0172ab_idx",
        ),
        migrations.RemoveIndex(
            model_name="location",
            name="edc_pharmac_modifie_c4a1aa_idx",
        ),
        migrations.RemoveIndex(
            model_name="location",
            name="edc_pharmac_user_mo_1838af_idx",
        ),
        migrations.RemoveIndex(
            model_name="order",
            name="edc_pharmac_subject_36f4ea_idx",
        ),
        migrations.RemoveField(
            model_name="container",
            name="display_index",
        ),
        migrations.RemoveField(
            model_name="container",
            name="display_name",
        ),
        migrations.RemoveField(
            model_name="container",
            name="extra_value",
        ),
        migrations.RemoveField(
            model_name="container",
            name="field_name",
        ),
        migrations.RemoveField(
            model_name="container",
            name="plural_name",
        ),
        migrations.RemoveField(
            model_name="container",
            name="version",
        ),
        migrations.RemoveField(
            model_name="historicalorder",
            name="product",
        ),
        migrations.RemoveField(
            model_name="historicalorder",
            name="qty_ordered",
        ),
        migrations.RemoveField(
            model_name="historicalorder",
            name="qty_supplied",
        ),
        migrations.RemoveField(
            model_name="historicalorder",
            name="subject_identifier",
        ),
        migrations.RemoveField(
            model_name="historicalproduct",
            name="container",
        ),
        migrations.RemoveField(
            model_name="historicalproduct",
            name="count_per_container",
        ),
        migrations.RemoveField(
            model_name="historicalproduct",
            name="site",
        ),
        migrations.RemoveField(
            model_name="historicalstock",
            name="site",
        ),
        migrations.RemoveField(
            model_name="location",
            name="created",
        ),
        migrations.RemoveField(
            model_name="location",
            name="description",
        ),
        migrations.RemoveField(
            model_name="location",
            name="device_created",
        ),
        migrations.RemoveField(
            model_name="location",
            name="device_modified",
        ),
        migrations.RemoveField(
            model_name="location",
            name="hostname_created",
        ),
        migrations.RemoveField(
            model_name="location",
            name="hostname_modified",
        ),
        migrations.RemoveField(
            model_name="location",
            name="locale_created",
        ),
        migrations.RemoveField(
            model_name="location",
            name="locale_modified",
        ),
        migrations.RemoveField(
            model_name="location",
            name="location_datetime",
        ),
        migrations.RemoveField(
            model_name="location",
            name="location_identifier",
        ),
        migrations.RemoveField(
            model_name="location",
            name="modified",
        ),
        migrations.RemoveField(
            model_name="location",
            name="revision",
        ),
        migrations.RemoveField(
            model_name="location",
            name="user_created",
        ),
        migrations.RemoveField(
            model_name="location",
            name="user_modified",
        ),
        migrations.RemoveField(
            model_name="order",
            name="product",
        ),
        migrations.RemoveField(
            model_name="order",
            name="qty_ordered",
        ),
        migrations.RemoveField(
            model_name="order",
            name="qty_supplied",
        ),
        migrations.RemoveField(
            model_name="order",
            name="subject_identifier",
        ),
        migrations.RemoveField(
            model_name="product",
            name="container",
        ),
        migrations.RemoveField(
            model_name="product",
            name="count_per_container",
        ),
        migrations.RemoveField(
            model_name="product",
            name="site",
        ),
        migrations.RemoveField(
            model_name="stock",
            name="site",
        ),
        migrations.AddField(
            model_name="container",
            name="container_type",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.containertype",
            ),
        ),
        migrations.AddField(
            model_name="container",
            name="created",
            field=models.DateTimeField(
                blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
            ),
        ),
        migrations.AddField(
            model_name="container",
            name="device_created",
            field=models.CharField(blank=True, max_length=10, verbose_name="Device created"),
        ),
        migrations.AddField(
            model_name="container",
            name="device_modified",
            field=models.CharField(blank=True, max_length=10, verbose_name="Device modified"),
        ),
        migrations.AddField(
            model_name="container",
            name="hostname_created",
            field=models.CharField(
                blank=True,
                default=_socket.gethostname,
                help_text="System field. (modified on create only)",
                max_length=60,
                verbose_name="Hostname created",
            ),
        ),
        migrations.AddField(
            model_name="container",
            name="hostname_modified",
            field=django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                blank=True,
                help_text="System field. (modified on every save)",
                max_length=50,
                verbose_name="Hostname modified",
            ),
        ),
        migrations.AddField(
            model_name="container",
            name="locale_created",
            field=models.CharField(
                blank=True,
                help_text="Auto-updated by Modeladmin",
                max_length=10,
                null=True,
                verbose_name="Locale created",
            ),
        ),
        migrations.AddField(
            model_name="container",
            name="locale_modified",
            field=models.CharField(
                blank=True,
                help_text="Auto-updated by Modeladmin",
                max_length=10,
                null=True,
                verbose_name="Locale modified",
            ),
        ),
        migrations.AddField(
            model_name="container",
            name="may_order_as",
            field=models.BooleanField(
                default=False, verbose_name="Container may be used for ordering"
            ),
        ),
        migrations.AddField(
            model_name="container",
            name="may_receive_as",
            field=models.BooleanField(
                default=False, verbose_name="Container may be used for receiving"
            ),
        ),
        migrations.AddField(
            model_name="container",
            name="may_request_as",
            field=models.BooleanField(
                default=False, verbose_name="Container may be used for stock request"
            ),
        ),
        migrations.AddField(
            model_name="container",
            name="modified",
            field=models.DateTimeField(
                blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow
            ),
        ),
        migrations.AddField(
            model_name="container",
            name="qty",
            field=models.DecimalField(decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name="container",
            name="revision",
            field=django_revision.revision_field.RevisionField(
                blank=True,
                editable=False,
                help_text="System field. Git repository tag:branch:commit.",
                max_length=75,
                null=True,
                verbose_name="Revision",
            ),
        ),
        migrations.AddField(
            model_name="container",
            name="user_created",
            field=django_audit_fields.fields.userfield.UserField(
                blank=True,
                help_text="Updated by admin.save_model",
                max_length=50,
                verbose_name="user created",
            ),
        ),
        migrations.AddField(
            model_name="container",
            name="user_modified",
            field=django_audit_fields.fields.userfield.UserField(
                blank=True,
                help_text="Updated by admin.save_model",
                max_length=50,
                verbose_name="user modified",
            ),
        ),
        migrations.AddField(
            model_name="historicalorder",
            name="item_count",
            field=models.IntegerField(null=True, verbose_name="Item count"),
        ),
        migrations.AddField(
            model_name="historicalorder",
            name="order_identifier",
            field=models.CharField(blank=True, db_index=True, max_length=36, null=True),
        ),
        migrations.AddField(
            model_name="historicalorder",
            name="sent",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="historicalorder",
            name="status",
            field=models.CharField(
                choices=[
                    ("New", "New"),
                    ("partial", "Partial"),
                    ("COMPLETE", "Complete"),
                ],
                default="New",
                help_text="Updates in the signal",
                max_length=25,
            ),
        ),
        migrations.AddField(
            model_name="historicalstock",
            name="container",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.container",
            ),
        ),
        migrations.AddField(
            model_name="historicalstock",
            name="description",
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name="historicalstock",
            name="from_stock",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.stock",
            ),
        ),
        migrations.AddField(
            model_name="historicalstock",
            name="location",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.location",
            ),
        ),
        migrations.AddField(
            model_name="historicalstock",
            name="qty_in",
            field=models.DecimalField(
                decimal_places=2, default=Decimal("0"), max_digits=20, null=True
            ),
        ),
        migrations.AddField(
            model_name="historicalstock",
            name="qty_out",
            field=models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=20),
        ),
        migrations.AddField(
            model_name="historicalstock",
            name="status",
            field=models.CharField(
                choices=[("available", "Available"), ("reserved", "Reserved")],
                default="available",
                max_length=25,
            ),
        ),
        migrations.AddField(
            model_name="historicalstock",
            name="stock_datetime",
            field=models.DateTimeField(default=edc_utils.date.get_utcnow),
        ),
        migrations.AddField(
            model_name="historicalstock",
            name="unit_qty_in",
            field=models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=20),
        ),
        migrations.AddField(
            model_name="historicalstock",
            name="unit_qty_out",
            field=models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=20),
        ),
        migrations.AddField(
            model_name="location",
            name="display_index",
            field=models.IntegerField(
                default=0,
                help_text="Index to control display order if not alphabetical, not required",
                verbose_name="display index",
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="display_name",
            field=models.CharField(
                default="-",
                help_text="(suggest 40 characters max.)",
                max_length=250,
                unique=True,
                verbose_name="Name",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="location",
            name="extra_value",
            field=models.CharField(max_length=250, null=True),
        ),
        migrations.AddField(
            model_name="location",
            name="field_name",
            field=models.CharField(
                blank=True,
                editable=False,
                help_text="Not required",
                max_length=25,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="plural_name",
            field=models.CharField(max_length=250, null=True, verbose_name="Plural name"),
        ),
        migrations.AddField(
            model_name="location",
            name="version",
            field=models.CharField(default="1.0", editable=False, max_length=35),
        ),
        migrations.AddField(
            model_name="order",
            name="item_count",
            field=models.IntegerField(null=True, verbose_name="Item count"),
        ),
        migrations.AddField(
            model_name="order",
            name="order_identifier",
            field=models.CharField(blank=True, max_length=36, null=True, unique=True),
        ),
        migrations.AddField(
            model_name="order",
            name="sent",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="order",
            name="status",
            field=models.CharField(
                choices=[
                    ("New", "New"),
                    ("partial", "Partial"),
                    ("COMPLETE", "Complete"),
                ],
                default="New",
                help_text="Updates in the signal",
                max_length=25,
            ),
        ),
        migrations.AddField(
            model_name="stock",
            name="container",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.container",
            ),
        ),
        migrations.AddField(
            model_name="stock",
            name="description",
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name="stock",
            name="from_stock",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="source_stock",
                to="edc_pharmacy.stock",
            ),
        ),
        migrations.AddField(
            model_name="stock",
            name="location",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.location",
            ),
        ),
        migrations.AddField(
            model_name="stock",
            name="qty_in",
            field=models.DecimalField(
                decimal_places=2, default=Decimal("0"), max_digits=20, null=True
            ),
        ),
        migrations.AddField(
            model_name="stock",
            name="qty_out",
            field=models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=20),
        ),
        migrations.AddField(
            model_name="stock",
            name="status",
            field=models.CharField(
                choices=[("available", "Available"), ("reserved", "Reserved")],
                default="available",
                max_length=25,
            ),
        ),
        migrations.AddField(
            model_name="stock",
            name="stock_datetime",
            field=models.DateTimeField(default=edc_utils.date.get_utcnow),
        ),
        migrations.AddField(
            model_name="stock",
            name="unit_qty_in",
            field=models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=20),
        ),
        migrations.AddField(
            model_name="stock",
            name="unit_qty_out",
            field=models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=20),
        ),
        migrations.AlterField(
            model_name="container",
            name="id",
            field=django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                blank=True,
                editable=False,
                help_text="System auto field. UUID primary key.",
                primary_key=True,
                serialize=False,
            ),
        ),
        migrations.AlterField(
            model_name="container",
            name="name",
            field=models.CharField(blank=True, max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name="historicalproduct",
            name="name",
            field=models.CharField(
                blank=True,
                db_index=True,
                help_text="Leave blank to use default",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="historicalproduct",
            name="product_identifier",
            field=models.CharField(blank=True, db_index=True, max_length=36, null=True),
        ),
        migrations.AlterField(
            model_name="historicalstock",
            name="stock_identifier",
            field=models.CharField(blank=True, db_index=True, max_length=36, null=True),
        ),
        migrations.AlterField(
            model_name="location",
            name="id",
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="location",
            name="name",
            field=models.CharField(
                help_text="This is the stored value, required",
                max_length=250,
                unique=True,
                verbose_name="Stored value",
            ),
        ),
        migrations.AlterField(
            model_name="product",
            name="name",
            field=models.CharField(
                blank=True,
                help_text="Leave blank to use default",
                max_length=50,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="product",
            name="product_identifier",
            field=models.CharField(blank=True, max_length=36, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name="stock",
            name="stock_identifier",
            field=models.CharField(blank=True, max_length=36, null=True, unique=True),
        ),
        migrations.AddIndex(
            model_name="location",
            index=models.Index(
                fields=["display_index", "display_name"],
                name="edc_pharmac_display_c5b56a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="assignment",
            index=models.Index(
                fields=["modified", "created"], name="edc_pharmac_modifie_46b9fc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="assignment",
            index=models.Index(
                fields=["user_modified", "user_created"],
                name="edc_pharmac_user_mo_0d441d_idx",
            ),
        ),
        migrations.AddField(
            model_name="historicalproduct",
            name="assignment",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.assignment",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="assignment",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.assignment",
            ),
        ),
        migrations.AddIndex(
            model_name="containerunits",
            index=models.Index(
                fields=["display_index", "display_name"],
                name="edc_pharmac_display_ff6b48_idx",
            ),
        ),
        migrations.AddField(
            model_name="container",
            name="units",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.containerunits",
            ),
        ),
        migrations.AddIndex(
            model_name="container",
            index=models.Index(
                fields=["modified", "created"], name="edc_pharmac_modifie_3a103a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="container",
            index=models.Index(
                fields=["user_modified", "user_created"],
                name="edc_pharmac_user_mo_cb1dc7_idx",
            ),
        ),
        migrations.AddField(
            model_name="historicalassignment",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicallot",
            name="assignment",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.assignment",
            ),
        ),
        migrations.AddField(
            model_name="historicallot",
            name="formulation",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.formulation",
            ),
        ),
        migrations.AddField(
            model_name="historicallot",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalorderitem",
            name="container",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                limit_choices_to={"may_order_as": True},
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.container",
            ),
        ),
        migrations.AddField(
            model_name="historicalorderitem",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalorderitem",
            name="order",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.order",
            ),
        ),
        migrations.AddField(
            model_name="historicalorderitem",
            name="product",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.product",
            ),
        ),
        migrations.AddField(
            model_name="historicalreceive",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalreceive",
            name="location",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.location",
            ),
        ),
        migrations.AddField(
            model_name="historicalreceive",
            name="order",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.order",
            ),
        ),
        migrations.AddField(
            model_name="historicalreceiveitem",
            name="container",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                limit_choices_to={"may_receive_as": True},
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.container",
            ),
        ),
        migrations.AddField(
            model_name="historicalreceiveitem",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalrequest",
            name="container",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.container",
            ),
        ),
        migrations.AddField(
            model_name="historicalrequest",
            name="formulation",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.formulation",
            ),
        ),
        migrations.AddField(
            model_name="historicalrequest",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalrequest",
            name="site",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="sites.site",
            ),
        ),
        migrations.AddField(
            model_name="historicalrequestitem",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalrequestitem",
            name="site",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="sites.site",
            ),
        ),
        migrations.AddField(
            model_name="historicalstocktransfer",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalstocktransfer",
            name="site",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="sites.site",
            ),
        ),
        migrations.AddField(
            model_name="lot",
            name="assignment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.assignment",
            ),
        ),
        migrations.AddField(
            model_name="lot",
            name="formulation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.formulation",
            ),
        ),
        migrations.AddField(
            model_name="historicalstocktransfer",
            name="lot",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.lot",
            ),
        ),
        migrations.AddField(
            model_name="orderitem",
            name="container",
            field=models.ForeignKey(
                limit_choices_to={"may_order_as": True},
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.container",
            ),
        ),
        migrations.AddField(
            model_name="orderitem",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="edc_pharmacy.order"
            ),
        ),
        migrations.AddField(
            model_name="orderitem",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="edc_pharmacy.product"
            ),
        ),
        migrations.AddField(
            model_name="historicalreceiveitem",
            name="order_item",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.orderitem",
            ),
        ),
        migrations.AddField(
            model_name="receive",
            name="location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="edc_pharmacy.location"
            ),
        ),
        migrations.AddField(
            model_name="receive",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="edc_pharmacy.order"
            ),
        ),
        migrations.AddField(
            model_name="historicalreceiveitem",
            name="receive",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.receive",
            ),
        ),
        migrations.AddField(
            model_name="receiveitem",
            name="container",
            field=models.ForeignKey(
                limit_choices_to={"may_receive_as": True},
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.container",
            ),
        ),
        migrations.AddField(
            model_name="receiveitem",
            name="order_item",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="edc_pharmacy.orderitem"
            ),
        ),
        migrations.AddField(
            model_name="receiveitem",
            name="receive",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="edc_pharmacy.receive"
            ),
        ),
        migrations.AddField(
            model_name="historicalstock",
            name="receive_item",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.receiveitem",
            ),
        ),
        migrations.AddField(
            model_name="stock",
            name="receive_item",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.receiveitem",
            ),
        ),
        migrations.AddField(
            model_name="request",
            name="container",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.container",
            ),
        ),
        migrations.AddField(
            model_name="request",
            name="formulation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.formulation",
            ),
        ),
        migrations.AddField(
            model_name="request",
            name="site",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="sites.site",
            ),
        ),
        migrations.AddField(
            model_name="historicalrequestitem",
            name="request",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.request",
                verbose_name="Stock request",
            ),
        ),
        migrations.AddField(
            model_name="requestitem",
            name="request",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.request",
                verbose_name="Stock request",
            ),
        ),
        migrations.AddField(
            model_name="requestitem",
            name="site",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.PROTECT, to="sites.site"
            ),
        ),
        migrations.AddField(
            model_name="historicalstock",
            name="request_item",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.requestitem",
            ),
        ),
        migrations.AddField(
            model_name="stock",
            name="request_item",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.requestitem",
            ),
        ),
        migrations.AddField(
            model_name="stocktransfer",
            name="lot",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="edc_pharmacy.lot"
            ),
        ),
        migrations.AddField(
            model_name="stocktransfer",
            name="site",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="sites.site"
            ),
        ),
        migrations.AddField(
            model_name="stocktransferitems",
            name="stock_transfer_request",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.stocktransfer",
            ),
        ),
        migrations.AddField(
            model_name="stocktransferrequest",
            name="formulation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.formulation",
            ),
        ),
        migrations.AddField(
            model_name="stocktransferrequest",
            name="site",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="sites.site"
            ),
        ),
        migrations.AddField(
            model_name="stocktransferrequestitems",
            name="stock_transfer_request",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="edc_pharmacy.stocktransferrequest",
            ),
        ),
        migrations.DeleteModel(
            name="GenericContainer",
        ),
        migrations.DeleteModel(
            name="HistoricalLabels",
        ),
        migrations.DeleteModel(
            name="HistoricalMedicationLot",
        ),
        migrations.DeleteModel(
            name="HistoricalStockCreateLabels",
        ),
        migrations.DeleteModel(
            name="HistoricalStockReceiving",
        ),
        migrations.DeleteModel(
            name="Labels",
        ),
        migrations.DeleteModel(
            name="MedicationLot",
        ),
        migrations.DeleteModel(
            name="PillBottle",
        ),
        migrations.DeleteModel(
            name="StockCreateLabels",
        ),
        migrations.DeleteModel(
            name="StockReceiving",
        ),
        migrations.DeleteModel(
            name="SubjectPillBottle",
        ),
        migrations.AddField(
            model_name="request",
            name="site_proxy",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="edc_pharmacy.siteproxy",
                verbose_name="Requested from",
            ),
        ),
        migrations.AddField(
            model_name="historicalrequest",
            name="site_proxy",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="edc_pharmacy.siteproxy",
                verbose_name="Requested from",
            ),
        ),
        migrations.AddIndex(
            model_name="lot",
            index=models.Index(
                fields=["modified", "created"], name="edc_pharmac_modifie_50c644_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="lot",
            index=models.Index(
                fields=["user_modified", "user_created"],
                name="edc_pharmac_user_mo_227b04_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="orderitem",
            index=models.Index(
                fields=["modified", "created"], name="edc_pharmac_modifie_76214d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="orderitem",
            index=models.Index(
                fields=["user_modified", "user_created"],
                name="edc_pharmac_user_mo_cc450e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="receive",
            index=models.Index(
                fields=["modified", "created"], name="edc_pharmac_modifie_ca1746_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="receive",
            index=models.Index(
                fields=["user_modified", "user_created"],
                name="edc_pharmac_user_mo_661efc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="receiveitem",
            index=models.Index(
                fields=["modified", "created"], name="edc_pharmac_modifie_a8e559_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="receiveitem",
            index=models.Index(
                fields=["user_modified", "user_created"],
                name="edc_pharmac_user_mo_cdf3df_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="requestitem",
            index=models.Index(
                fields=["modified", "created"], name="edc_pharmac_modifie_20ac62_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="requestitem",
            index=models.Index(
                fields=["user_modified", "user_created"],
                name="edc_pharmac_user_mo_cb9812_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="stocktransferrequest",
            index=models.Index(
                fields=["modified", "created"], name="edc_pharmac_modifie_2e098c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stocktransferrequest",
            index=models.Index(
                fields=["user_modified", "user_created"],
                name="edc_pharmac_user_mo_c284a1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="request",
            index=models.Index(
                fields=["modified", "created"], name="edc_pharmac_modifie_e229c0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="request",
            index=models.Index(
                fields=["user_modified", "user_created"],
                name="edc_pharmac_user_mo_5f3bd7_idx",
            ),
        ),
    ]
